{"version":3,"file":"static/js/828.972dd6c5.chunk.js","mappings":"yMAEaA,E,QAAMC,GAAAA,IAAH,8EAED,SAAAC,GAAK,uBAAIA,EAAMC,gBAAV,QAAsB,OAAtB,I,mBCsBpB,EArBuB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOH,EAAc,EAAdA,SACzC,GAA4BI,EAAAA,EAAAA,UAASH,GAArC,eAAOI,EAAP,KAAeC,EAAf,KAKA,OACE,iCACIH,IAAS,SAACN,EAAD,CAAKG,SAAUA,EAAUC,IAAKM,EAAkBL,IAAKA,IAC/DC,IAAS,SAACN,EAAD,CAAKG,SAAUA,EAAUQ,QAPlB,WACnBF,EAAUC,EACX,EAK6DN,IAAKI,EAAQH,IAAKA,MAGjF,C,8FCwBD,IAtC2B,SAACO,EAASC,GACnC,IAGIC,EAHJ,GAA0BP,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOQ,EAAP,KAAcC,EAAd,KACA,GAA6BT,EAAAA,EAAAA,WAAS,GAAtC,eAAOU,EAAP,KAAgBC,EAAhB,KAGA,OAAQL,GACN,IAAK,UACHC,EAAgB,WAChB,MAEF,IAAK,UACHA,EAAgB,WAClB,MAEA,QACEA,EAAgB,GAoBpB,OAhBAK,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,2FACnBF,GAAU,GADS,kBAIMG,IAAAA,IAAA,6CAAgDT,GAAhD,OAA0DE,EAA1D,8CAJN,cAIXQ,EAJW,gBAKXN,EAASM,EAASC,MALP,uDAOjBC,QAAQC,IAAR,MAPiB,yBASjBP,GAAU,GATO,4EAAH,qDAYlBE,GACD,GAAE,CAACR,EAASE,IAEN,CAACC,MAAAA,EAAOE,QAAAA,EAChB,C,uJCrCYS,EAAUzB,EAAAA,GAAAA,QAAH,8LAYP0B,EAAa1B,EAAAA,GAAAA,IAAH,sIAUV2B,EAAY3B,EAAAA,GAAAA,IAAH,gM,SCctB,EAjCqB,SAAC,GAAa,IAAZc,EAAW,EAAXA,MACbc,EACRd,EADQc,YAAaC,EACrBf,EADqBe,aAAcC,EACnChB,EADmCgB,MAAOC,EAC1CjB,EAD0CiB,aAAcC,EACxDlB,EADwDkB,SAAUC,EAClEnB,EADkEmB,OAG5DC,EAAc,IAAIC,KAAKN,GAAcO,cACrCC,EAAS,WAAsB,GAAfN,GAAmBO,QAAQ,GAAlC,KAEf,OACE,UAACb,EAAD,YACE,SAACC,EAAD,WACE,SAACa,EAAA,EAAD,CACEpC,IAAG,yCAAoCyB,GACvCxB,IAAG,UAAK0B,EAAL,UACHzB,MAAOuB,EACP1B,SAAS,aAGb,UAACyB,EAAD,YACE,kCAAQG,EAAR,aAAkBI,EAAlB,QACA,6CAAmBG,MACnB,sCACA,uBAAIL,KACJ,oCACA,8BAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAQO,KAAI,SAAAC,GAAC,OAAIA,EAAEC,IAAN,IAAYC,KAAK,aAIzC,EC9BYC,EAAsB5C,EAAAA,GAAAA,QAAH,+b,SCCnB6C,EAAW7C,EAAAA,GAAAA,GAAH,gKAYR8C,GAAW9C,EAAAA,EAAAA,IAAO+C,EAAAA,GAAP/C,CAAH,gjBCWrB,EAtBkB,WAChB,IAAMgD,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,mDACA,UAACJ,EAAD,YACE,yBACE,SAACC,EAAD,CAAUI,GAAG,OAAOC,MAAOH,EAASG,MAApC,qBAIF,yBACE,SAACL,EAAD,CAAUI,GAAG,UAAUC,MAAOH,EAASG,MAAvC,4BAOT,ECgBD,EAhCyB,WAAO,IAAD,UACrBxC,GAAYyC,EAAAA,EAAAA,MAAZzC,QACFqC,GAAWC,EAAAA,EAAAA,MACXI,GAAWC,EAAAA,EAAAA,MACjB,GAA2BC,EAAAA,EAAAA,GAAmB5C,GAAtCG,EAAR,EAAQA,MAAOE,EAAf,EAAeA,QAETwC,EAAQ,8BACTR,EAASG,aADA,iBACT,EAAgBM,YADP,aACT,EAAsBC,UADb,iBACwBV,EAASG,aADjC,iBACwB,EAAgBM,YADxC,aACwB,EAAsBE,eAD9C,QAEZ,UAMF,OACE,UAACf,EAAD,YACE,mBAAQgB,KAAK,SAASC,QANJ,SAAAC,GACpBT,EAASG,EAAU,CAAEO,SAAS,GAC/B,EAIG,4BAGC/C,GACC,SAACgD,EAAA,EAAD,KAEA,iCACE,SAAC,EAAD,CAAclD,MAAOA,KACrB,SAAC,EAAD,KACA,SAAC,KAAD,SAKT,C","sources":["components/ImageWithCheck/ImageWithCheck.styled.js","components/ImageWithCheck/ImageWithCheck.jsx","hooks/useFetchMoviesById.js","components/Movies/MovieDetails.styled.js","components/Movies/MovieDetails.jsx","pages/MoviesDetailsPage/MovieDetailsPage.styled.js","components/Movies/MovieInfo.styled.js","components/Movies/MovieInfo.jsx","pages/MoviesDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Img = styled.img`\n  display: block;\n  max-width: ${props => props.maxWidth ?? \"300px\"};\n  width: 100%;\n`;","import { useState } from \"react\";\nimport { Img } from \"./ImageWithCheck.styled\";\nimport NoImageAvailable from \"../../images/NoImageAvailable.png\"\nimport PropTypes from 'prop-types';\n\nconst ImageWithCheck = ({ src, alt, check, maxWidth}) => {\n  const [imgSrc, setImgSrc] = useState(src);\n  const errorHandler = () => {\n    setImgSrc(NoImageAvailable);\n  }\n\n  return (\n    <>\n      {!check && <Img maxWidth={maxWidth} src={NoImageAvailable} alt={alt} />}\n      {check && <Img maxWidth={maxWidth} onError={errorHandler} src={imgSrc} alt={alt} />}\n    </>\n  );\n};\n\nImageWithCheck.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  check: PropTypes.string,\n  maxWidth: PropTypes.string,\n};\n\nexport default ImageWithCheck;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react'\n\nconst useFetchMoviesById = (movieId, urlParameter) => {\n  const [movie, setMovie] = useState({});\n  const [loading, isLoading] = useState(false);\n\n  let parameterPath;\n  switch (urlParameter) {\n    case \"credits\":\n      parameterPath = \"/credits\";\n      break;\n\n    case \"reviews\":\n      parameterPath = \"/reviews\";\n    break;\n  \n    default:\n      parameterPath = \"\";\n      break;\n  }\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      isLoading(true);\n  \n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}${parameterPath}?api_key=80dd3433372e51907072dd17bd29b086`);\n        await setMovie(response.data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        isLoading(false);\n      }\n    };\n    getMovieById();\n  }, [movieId, parameterPath]);\n\n  return {movie, loading};\n}\n\nexport default useFetchMoviesById;","import styled from \"styled-components\";\n\nexport const Details = styled.article`\n  @media (min-width: 660px) {\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    gap: 20px;\n  }\n\n  @media (min-width: 1024px) {\n    gap: 50px;\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  max-width: 300px;\n  width: 100%;\n  margin: 0 auto;\n\n  @media (min-width: 660px) {\n    margin: 0;\n  }\n`;\n\nexport const MovieInfo = styled.div`\n  text-align: justify;\n\n  @media (min-width: 660px) {\n    & h2 {\n      margin-top: 0;\n    }\n  }\n\n  @media (min-width: 1024px) {\n    padding-right: 50px;\n  }\n`;","import React from 'react'\nimport ImageWithCheck from '../ImageWithCheck/ImageWithCheck'\nimport { Details, MovieInfo, ImgWrapper } from './MovieDetails.styled';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = ({movie}) => {\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n  movie;\n\n  const releaseYear = new Date(release_date).getFullYear();\n  const userScore = `${(vote_average * 10).toFixed(0)}%`;\n\n  return (\n    <Details>\n      <ImgWrapper>\n        <ImageWithCheck\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={`${title} cover`}\n          check={poster_path}\n          maxWidth=\"500px\"\n        />\n      </ImgWrapper>\n      <MovieInfo>\n        <h2>{`${title} (${releaseYear})`}</h2>\n        <p>{`User score: ${userScore}`}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres?.map(g => g.name).join(', ')}</p>\n      </MovieInfo>\n    </Details>\n  )\n}\n\nMovieDetails.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieDetails","import styled from \"styled-components\";\n\nexport const MovieDetailsSection = styled.section`\n  padding: 10px 20px;\n\n  & button {\n    margin-bottom: 10px;\n    padding: 8px 16px;\n    border: 1px solid grey;\n    border-radius: 5px;\n    font-size: 14px;\n    color: white;\n    background-color: black;\n    cursor: pointer;\n\n    &:hover,\n    &:focus {\n      background-color: #B30303;\n      box-shadow: -1px -1px 3px 1px black, 1px 1px 3px 1px black;\n      transition: background-color 400ms;\n    }\n  }\n`;","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const InfoList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n  display: flex;\n\n  & li {\n    &:not(:last-child) {\n      margin-right: 15px;\n    }\n  }\n`;\n\nexport const InfoLink = styled(NavLink)`\n  display: block;\n  padding: 8px 16px;\n  border: 1px solid grey;\n  border-radius: 5px;\n  font-size: 14px;\n  text-decoration: none;\n  color: white;\n  background-color: black;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    font-weight: 600;\n    background-color: #B30303;\n    box-shadow: -1px -1px 3px 1px black, 1px 1px 3px 1px black;\n    transition: background-color 500ms;\n  }\n\n  &.active {\n    font-weight: 600;\n    background-color: #B30303;\n    box-shadow: -1px -1px 3px 1px black, 1px 1px 3px 1px black;\n  }\n`;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { InfoLink, InfoList } from './MovieInfo.styled';\n\nconst MovieInfo = () => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <h3>Aditional information</h3>\n      <InfoList>\n        <li>\n          <InfoLink to=\"cast\" state={location.state}>\n            Cast\n          </InfoLink>\n        </li>\n        <li>\n          <InfoLink to=\"reviews\" state={location.state}>\n            Reviews\n          </InfoLink>\n        </li>\n      </InfoList>\n    </div>\n  );\n};\n\nexport default MovieInfo;","import React from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport useFetchMoviesById from '../../hooks/useFetchMoviesById';\nimport Loader from '../../components/Loader/Loader';\nimport MovieDetails from '../../components/Movies/MovieDetails';\nimport { MovieDetailsSection } from './MovieDetailsPage.styled';\nimport MovieInfo from 'components/Movies/MovieInfo';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { movie, loading } = useFetchMoviesById(movieId);\n\n  const backLink =\n    `${location.state?.from?.pathname}${location.state?.from?.search}` ??\n    '/movies';\n\n  const goBackHandler = e => {\n    navigate(backLink, { replace: true });\n  };\n\n  return (\n    <MovieDetailsSection>\n      <button type=\"button\" onClick={goBackHandler}>\n        &larr; Go back\n      </button>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <MovieDetails movie={movie} />\n          <MovieInfo />\n          <Outlet />\n        </>\n      )}\n    </MovieDetailsSection>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["Img","styled","props","maxWidth","src","alt","check","useState","imgSrc","setImgSrc","NoImageAvailable","onError","movieId","urlParameter","parameterPath","movie","setMovie","loading","isLoading","useEffect","getMovieById","axios","response","data","console","log","Details","ImgWrapper","MovieInfo","poster_path","release_date","title","vote_average","overview","genres","releaseYear","Date","getFullYear","userScore","toFixed","ImageWithCheck","map","g","name","join","MovieDetailsSection","InfoList","InfoLink","NavLink","location","useLocation","to","state","useParams","navigate","useNavigate","useFetchMoviesById","backLink","from","pathname","search","type","onClick","e","replace","Loader"],"sourceRoot":""}