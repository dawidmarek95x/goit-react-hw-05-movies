{"version":3,"file":"static/js/76.4e146044.chunk.js","mappings":"wMAEaA,E,QAAMC,GAAAA,IAAH,8EAED,SAAAC,GAAK,uBAAIA,EAAMC,gBAAV,QAAsB,OAAtB,I,mBCsBpB,EArBuB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,IAAKC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,MAAOH,EAAc,EAAdA,SACzC,GAA4BI,EAAAA,EAAAA,UAASH,GAArC,eAAOI,EAAP,KAAeC,EAAf,KAKA,OACE,iCACIH,IAAS,SAACN,EAAD,CAAKG,SAAUA,EAAUC,IAAKM,EAAkBL,IAAKA,IAC/DC,IAAS,SAACN,EAAD,CAAKG,SAAUA,EAAUQ,QAPlB,WACnBF,EAAUC,EACX,EAK6DN,IAAKI,EAAQH,IAAKA,MAGjF,C,yHCfKO,EAAe,OAERC,EAAOZ,EAAAA,GAAAA,GAAH,ixBAYIW,GA4BRE,EAAab,EAAAA,GAAAA,IAAH,iPAGKW,EACCA,G,SCd7B,EA5BmB,SAAC,GAAc,IAAbG,EAAY,EAAZA,OACfC,GAAWC,EAAAA,EAAAA,MAEf,OACE,SAACJ,EAAD,UACGE,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,UAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CACLC,KAAMP,GAHV,WAME,SAACF,EAAD,WACE,SAACU,EAAA,EAAD,CAAgBpB,IAAG,yCAAoCe,EAAMM,aAAepB,IAAKc,EAAMO,MAAOpB,MAAOa,EAAMM,iBAE7G,uBAAIN,EAAMO,YAVLP,EAAME,GADA,KAiBtB,C,uJC1BYM,E,QAAkB1B,GAAAA,QAAH,gE,SC6B5B,EA1BiB,WACf,OAAwCM,EAAAA,EAAAA,UAAS,IAAjD,eAAOqB,EAAP,KAAqBC,EAArB,KAEMC,EAAS,mCAAG,8GAEWC,EAAAA,EAAAA,KAFX,OAERC,EAFQ,OAGdH,EAAgBG,GAHF,gDAKdC,QAAQC,IAAR,MALc,iEAAH,qDAaf,OAJAC,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,KAGD,UAACH,EAAD,YACE,0BACE,8CAEF,SAACS,EAAA,EAAD,CAAYrB,OAAQa,MAGzB,C,kIC5BKS,EAAS,mCAEFN,EAAe,mCAAG,WAAOO,GAAP,uFAGvBA,EADc,SAAjBA,EACkB,OACA,MAJQ,SAMJC,IAAAA,IAAA,sDAC0BD,EAD1B,oBACkDD,IAP9C,cAMrBG,EANqB,yBASpBA,EAASC,KAAKC,SATM,gCAW3BT,QAAQC,IAAR,MAX2B,iEAAH,sDAefS,EAAgB,mCAAG,WAAOC,GAAP,gGAELL,IAAAA,IAAA,4DACgCF,EADhC,kBACgDO,EADhD,gCAFK,cAEtBJ,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BT,QAAQC,IAAR,MAP4B,yDAAH,qD","sources":["components/ImageWithCheck/ImageWithCheck.styled.js","components/ImageWithCheck/ImageWithCheck.jsx","components/Movies/MoviesList.styled.js","components/Movies/MoviesList.jsx","pages/Homepage/HomePage.styled.js","pages/Homepage/HomePage.jsx","services/movieApi.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Img = styled.img`\n  display: block;\n  max-width: ${props => props.maxWidth ?? \"300px\"};\n  width: 100%;\n`;","import { useState } from \"react\";\nimport { Img } from \"./ImageWithCheck.styled\";\nimport NoImageAvailable from \"../../images/NoImageAvailable.png\"\nimport PropTypes from 'prop-types';\n\nconst ImageWithCheck = ({ src, alt, check, maxWidth}) => {\n  const [imgSrc, setImgSrc] = useState(src);\n  const errorHandler = () => {\n    setImgSrc(NoImageAvailable);\n  }\n\n  return (\n    <>\n      {!check && <Img maxWidth={maxWidth} src={NoImageAvailable} alt={alt} />}\n      {check && <Img maxWidth={maxWidth} onError={errorHandler} src={imgSrc} alt={alt} />}\n    </>\n  );\n};\n\nImageWithCheck.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  check: PropTypes.string,\n  maxWidth: PropTypes.string,\n};\n\nexport default ImageWithCheck;\n","import styled from \"styled-components\";\n\nconst borderRadius = \"10px\";\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 20px;\n  justify-items: center;\n  padding: 0 20px;\n  list-style-type: none;\n\n  & li {\n    max-width: 300px;\n    width: 100%;\n    border: 1px solid black;\n    border-radius: ${borderRadius};\n    background-color: lightgray;\n\n    &:hover {\n      border-color: gray;\n      box-shadow: -1px -1px 3px 1px black, 1px 1px 3px 1px black;\n    }\n  }\n\n  & a {\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    color: black;\n    text-decoration: none;\n\n    & p {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      text-align: center;\n      margin: auto 0;\n      padding: 5px;\n      font-weight: 500;\n    }\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  max-height: 370px;\n  height: 100%;\n  border-top-left-radius: ${borderRadius};\n  border-top-right-radius: ${borderRadius};\n  border-bottom: 1px solid black;\n  overflow: hidden;\n\n  & img {\n    display: block;\n    height: 100%;\n  }\n`;","import ImageWithCheck from 'components/ImageWithCheck/ImageWithCheck';\nimport React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\nimport { ImgWrapper, List } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({movies}) => {\n  let location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ \n              from: location,\n            }}\n          >\n            <ImgWrapper>\n              <ImageWithCheck src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} alt={movie.title} check={movie.poster_path}/>\n            </ImgWrapper>\n            <p>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </List>\n  )\n}\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default MoviesList","import styled from \"styled-components\";\n\nexport const TrendiesSection = styled.section`\n  & h2 {\n    text-align: center;\n  }\n`;","import MoviesList from 'components/Movies/MoviesList';\nimport React, { useEffect, useState } from 'react';\nimport { getTrendyMovies } from 'services/movieApi';\nimport { TrendiesSection } from './HomePage.styled';\n\nconst HomePage = () => {\n  const [trendyMovies, setTrendyMovies] = useState([]);\n\n  const getMovies = async () => {\n    try {\n      const moviesList = await getTrendyMovies();\n      setTrendyMovies(moviesList);\n    } catch (error) {\n      console.log(error);\n    };\n  };\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <TrendiesSection>\n      <div>\n        <h2>Trending today</h2>\n      </div>\n      <MoviesList movies={trendyMovies}/>\n    </TrendiesSection>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\nconst apiKey = \"80dd3433372e51907072dd17bd29b086\";\n\nexport const getTrendyMovies = async (periodOfTime) => {\n  try {\n    (periodOfTime === \"week\")\n      ? periodOfTime = \"week\"\n      : periodOfTime = \"day\";\n\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/${periodOfTime}?api_key=${apiKey}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  };\n};\n\nexport const getMoviesByQuery = async (query) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};"],"names":["Img","styled","props","maxWidth","src","alt","check","useState","imgSrc","setImgSrc","NoImageAvailable","onError","borderRadius","List","ImgWrapper","movies","location","useLocation","map","movie","to","id","state","from","ImageWithCheck","poster_path","title","TrendiesSection","trendyMovies","setTrendyMovies","getMovies","getTrendyMovies","moviesList","console","log","useEffect","MoviesList","apiKey","periodOfTime","axios","response","data","results","getMoviesByQuery","query"],"sourceRoot":""}