{"version":3,"file":"static/js/797.5a1e53d1.chunk.js","mappings":"+KAwBA,IArBmB,SAAC,GAAc,IAAbA,EAAY,EAAZA,OACfC,GAAWC,EAAAA,EAAAA,MAEf,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CACLC,KAAMP,GAHV,SAMGG,EAAMK,SAPFL,EAAME,GADA,KActB,C,kICiDD,UA7DmB,WACjB,IAAMI,GAASC,EAAAA,EAAAA,MACf,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CL,EAAAA,EAAAA,UAAS,IAAnD,eAAOM,EAAP,KAAsBC,EAAtB,KAgBMC,GAAkBC,EAAAA,EAAAA,cAAW,iBAAC,oGAE1BC,EAAQN,EAAaO,IAAI,UAFC,iCAILC,EAAAA,EAAAA,GAAiBF,GAJZ,OAIxBG,EAJwB,OAK9BN,EAAiBM,GALa,uDAQhCC,QAAQC,IAAR,MARgC,yDAUjC,CAACX,IAOJ,OAJAY,EAAAA,EAAAA,YAAU,WACRR,GACD,GAAE,CAACA,KAGF,iCACIV,EAAOmB,UACP,iCACE,kBAAMC,SA/Ba,SAACC,GAC1BA,EAAEC,iBAGEf,EADJJ,EACoB,CAAES,MAAOT,GACT,IAEpBC,EAAc,GACf,EAuBO,WACE,kBACEmB,KAAK,OACLC,MAAOrB,EACPsB,SAvCe,SAACJ,GAC1BjB,EAAciB,EAAEK,OAAOF,MACxB,KAuCS,mBAAQD,KAAK,SAAb,wBAEF,SAAC,IAAD,CAAYjC,OAAQkB,OAGvBR,EAAOmB,UACN,+BACE,SAAC,KAAD,QAKT,C,kICpEKQ,EAAS,mCAEFC,EAAe,mCAAG,WAAOC,GAAP,uFAGvBA,EADc,SAAjBA,EACkB,OACA,MAJQ,SAMJC,IAAAA,IAAA,sDAC0BD,EAD1B,oBACkDF,IAP9C,cAMrBI,EANqB,yBASpBA,EAASC,KAAKC,SATM,gCAW3BjB,QAAQC,IAAR,MAX2B,iEAAH,sDAefH,EAAgB,mCAAG,WAAOF,GAAP,gGAELkB,IAAAA,IAAA,4DACgCH,EADhC,kBACgDf,EADhD,gCAFK,cAEtBmB,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,gCAO5BjB,QAAQC,IAAR,MAP4B,yDAAH,qD","sources":["components/MoviesList.jsx","pages/MoviesPage.jsx","services/movieApi.js"],"sourcesContent":["import React from 'react'\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({movies}) => {\n  let location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ \n              from: location,\n            }}\n          >\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default MoviesList","import MoviesList from 'components/MoviesList';\nimport React, { useCallback, useEffect } from 'react';\nimport { useState } from 'react';\nimport {\n  Outlet,\n  useParams,\n  useSearchParams,\n} from 'react-router-dom';\nimport { getMoviesByQuery } from 'services/movieApi';\n\nconst MoviesPage = () => {\n  const params = useParams();\n  const [queryValue, setQueryValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n\n  const queryChangeHandler = (e) => {\n    setQueryValue(e.target.value);\n  };\n\n  const querySubmitHandler = (e) => {\n    e.preventDefault();\n\n    queryValue\n      ? setSearchParams({ query: queryValue })\n      : setSearchParams('');\n    \n    setQueryValue('');\n  };\n\n  const getWantedMovies = useCallback(async () => {\n    try {\n      const query = searchParams.get('query');\n      if (query) {\n        const moviesList = await getMoviesByQuery(query);\n        setMoviesByQuery(moviesList);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [searchParams],\n);\n\n  useEffect(() => {\n    getWantedMovies();\n  }, [getWantedMovies]);\n\n  return (\n    <>\n      {!params.movieId && (\n        <>\n          <form onSubmit={querySubmitHandler}>\n            <input\n              type=\"text\"\n              value={queryValue}\n              onChange={queryChangeHandler}\n            />\n            <button type=\"submit\">Search</button>\n          </form>\n          <MoviesList movies={moviesByQuery}/>\n        </>\n      )}\n      {params.movieId && (\n        <>\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\nconst apiKey = \"80dd3433372e51907072dd17bd29b086\";\n\nexport const getTrendyMovies = async (periodOfTime) => {\n  try {\n    (periodOfTime === \"week\")\n      ? periodOfTime = \"week\"\n      : periodOfTime = \"day\";\n\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/${periodOfTime}?api_key=${apiKey}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  };\n};\n\nexport const getMoviesByQuery = async (query) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${query}&page=1&include_adult=false`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","params","useParams","useState","queryValue","setQueryValue","useSearchParams","searchParams","setSearchParams","moviesByQuery","setMoviesByQuery","getWantedMovies","useCallback","query","get","getMoviesByQuery","moviesList","console","log","useEffect","movieId","onSubmit","e","preventDefault","type","value","onChange","target","apiKey","getTrendyMovies","periodOfTime","axios","response","data","results"],"sourceRoot":""}