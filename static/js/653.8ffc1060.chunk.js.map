{"version":3,"file":"static/js/653.8ffc1060.chunk.js","mappings":"uKAgBA,IAduB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,IAAKC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAClC,GAA4BC,EAAAA,EAAAA,UAASH,GAArC,eAAOI,EAAP,KAAeC,EAAf,KAKA,OACE,iCACIH,IAAS,gBAAKF,IAAI,kEAAkEC,IAAKA,IAC1FC,IAAS,gBAAKI,QAPE,WACnBD,EAAU,kEACX,EAKyCL,IAAKI,EAAQH,IAAKA,MAG7D,C,8FC2BD,IAtC2B,SAACM,EAASC,GACnC,IAGIC,EAHJ,GAA0BN,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOO,EAAP,KAAcC,EAAd,KACA,GAA6BR,EAAAA,EAAAA,WAAS,GAAtC,eAAOS,EAAP,KAAgBC,EAAhB,KAGA,OAAQL,GACN,IAAK,UACHC,EAAgB,WAChB,MAEF,IAAK,UACHA,EAAgB,WAClB,MAEA,QACEA,EAAgB,GAoBpB,OAhBAK,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,2FACnBF,GAAU,GADS,kBAIMG,IAAAA,IAAA,6CAAgDT,GAAhD,OAA0DE,EAA1D,8CAJN,cAIXQ,EAJW,gBAKXN,EAASM,EAASC,MALP,uDAOjBC,QAAQC,IAAR,MAPiB,yBASjBP,GAAU,GATO,4EAAH,qDAYlBE,GACD,GAAE,CAACR,EAASE,IAEN,CAACC,MAAAA,EAAOE,QAAAA,EAChB,C,uHCtBD,EAdiB,SAAC,GAAc,IAAZS,EAAW,EAAXA,KAClB,OACE,2BACE,SAACC,EAAA,EAAD,CACEtB,IAAG,yCAAoCqB,EAAKE,cAC5CtB,IAAKoB,EAAKG,KACVtB,MAAOmB,EAAKE,gBAEd,wBAAKF,EAAKG,QACV,uCAAeH,EAAKI,eAPbJ,EAAKK,GAUjB,ECGD,EAfiB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,gCACqB,KAAb,OAALA,QAAK,IAALA,OAAA,EAAAA,EAAOC,UAAgB,qFAClB,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAOC,QAAS,IACf,+BACGD,QADH,IACGA,OADH,EACGA,EAAOE,KAAI,SAAAR,GAAI,OACd,SAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKK,GADN,QAOzB,E,UCMD,EAhBa,WACX,IAAQnB,GAAYuB,EAAAA,EAAAA,MAAZvB,QACR,GAA2BwB,EAAAA,EAAAA,GAAmBxB,EAAS,WAA/CG,EAAR,EAAQA,MAAOE,EAAf,EAAeA,QAETe,EAAQjB,EAAMW,KAEpB,OACE,gCACGT,IAAW,SAACoB,EAAA,EAAD,KACVpB,IACA,SAAC,EAAD,CAAUe,MAAOA,MAIxB,C","sources":["components/ImageWithCheck/ImageWithCheck.jsx","hooks/useFetchMoviesById.js","components/Cast/CastItem.jsx","components/Cast/CastList.jsx","pages/Cast.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nconst ImageWithCheck = ({ src, alt, check }) => {\n  const [imgSrc, setImgSrc] = useState(src);\n  const errorHandler = () => {\n    setImgSrc(\"https://via.placeholder.com/500x750/FEE6E6/231E1E?text=No+Image\");\n  }\n\n  return (\n    <>\n      {!check && <img src=\"https://via.placeholder.com/500x750/FEE6E6/231E1E?text=No+Image\" alt={alt} />}\n      {check && <img onError={errorHandler} src={imgSrc} alt={alt} />}\n    </>\n  );\n};\n\nexport default ImageWithCheck;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react'\n\nconst useFetchMoviesById = (movieId, urlParameter) => {\n  const [movie, setMovie] = useState({});\n  const [loading, isLoading] = useState(false);\n\n  let parameterPath;\n  switch (urlParameter) {\n    case \"credits\":\n      parameterPath = \"/credits\";\n      break;\n\n    case \"reviews\":\n      parameterPath = \"/reviews\";\n    break;\n  \n    default:\n      parameterPath = \"\";\n      break;\n  }\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      isLoading(true);\n  \n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}${parameterPath}?api_key=80dd3433372e51907072dd17bd29b086`);\n        await setMovie(response.data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        isLoading(false);\n      }\n    };\n    getMovieById();\n  }, [movieId, parameterPath]);\n\n  return {movie, loading};\n}\n\nexport default useFetchMoviesById;","import React from 'react';\nimport ImageWithCheck from '../ImageWithCheck/ImageWithCheck';\n\nconst CastItem = ({ cast }) => {\n  return (\n    <li key={cast.id}>\n      <ImageWithCheck\n        src={`https://image.tmdb.org/t/p/w500${cast.profile_path}`}\n        alt={cast.name}\n        check={cast.profile_path}\n      />\n      <h3>{cast.name}</h3>\n      <p>Character: {cast.character}</p>\n    </li>\n  );\n};\n\nexport default CastItem;\n","import React from 'react';\nimport CastItem from './CastItem';\n\nconst CastList = ({ casts }) => {\n  return (\n    <>\n      {casts?.length === 0 && <p>We don't have any information about cast for this movie.</p>}\n      {casts?.length > 0 && (\n        <ul>\n          {casts?.map(cast => (\n            <CastItem key={cast.id} cast={cast} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default CastList;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport useFetchMoviesById from '../hooks/useFetchMoviesById';\nimport CastList from '../components/Cast/CastList';\nimport Loader from '../components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const { movie, loading } = useFetchMoviesById(movieId, 'credits');\n\n  const casts = movie.cast;\n\n  return (\n    <>\n      {loading && <Loader />}\n      {!loading && (\n        <CastList casts={casts}/>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["src","alt","check","useState","imgSrc","setImgSrc","onError","movieId","urlParameter","parameterPath","movie","setMovie","loading","isLoading","useEffect","getMovieById","axios","response","data","console","log","cast","ImageWithCheck","profile_path","name","character","id","casts","length","map","useParams","useFetchMoviesById","Loader"],"sourceRoot":""}