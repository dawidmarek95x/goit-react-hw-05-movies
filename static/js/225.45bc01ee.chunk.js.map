{"version":3,"file":"static/js/225.45bc01ee.chunk.js","mappings":"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","sources":["components/ImageWithCheck/ImageWithCheck.styled.js","components/ImageWithCheck/ImageWithCheck.jsx","hooks/useFetchMoviesById.js","components/Movies/MovieDatails.jsx","pages/MoviesDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Img = styled.img`\n  display: block;\n  max-width: ${props => props.maxWidth ?? \"300px\"};\n  width: 100%;\n`;","import { useState } from \"react\";\nimport { Img } from \"./ImageWithCheck.styled\";\n\nconst ImageWithCheck = ({ src, alt, check, maxWidth}) => {\n  const [imgSrc, setImgSrc] = useState(src);\n  const errorHandler = () => {\n    setImgSrc(\"https://via.placeholder.com/500x750/9E9E9E/231E1E?text=No+Image\");\n  }\n\n  return (\n    <>\n      {!check && <Img maxWidth={maxWidth} src=\"https://via.placeholder.com/500x750/9E9E9E/231E1E?text=No+Image\" alt={alt} />}\n      {check && <Img maxWidth={maxWidth} onError={errorHandler} src={imgSrc} alt={alt} />}\n    </>\n  );\n};\n\nexport default ImageWithCheck;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react'\n\nconst useFetchMoviesById = (movieId, urlParameter) => {\n  const [movie, setMovie] = useState({});\n  const [loading, isLoading] = useState(false);\n\n  let parameterPath;\n  switch (urlParameter) {\n    case \"credits\":\n      parameterPath = \"/credits\";\n      break;\n\n    case \"reviews\":\n      parameterPath = \"/reviews\";\n    break;\n  \n    default:\n      parameterPath = \"\";\n      break;\n  }\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      isLoading(true);\n  \n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}${parameterPath}?api_key=80dd3433372e51907072dd17bd29b086`);\n        await setMovie(response.data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        isLoading(false);\n      }\n    };\n    getMovieById();\n  }, [movieId, parameterPath]);\n\n  return {movie, loading};\n}\n\nexport default useFetchMoviesById;","import React from 'react'\nimport ImageWithCheck from '../ImageWithCheck/ImageWithCheck'\n\nconst MovieDatails = ({movie}) => {\n  const { poster_path, release_date, title, vote_average, overview, genres } =\n  movie;\n\n  const releaseYear = new Date(release_date).getFullYear();\n  const userScore = `${(vote_average * 10).toFixed(0)}%`;\n\n  return (\n    <article>\n      <div>\n        <ImageWithCheck\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={`${title} cover`}\n          check={poster_path}\n        />\n      </div>\n      <div>\n        <h2>{`${title} (${releaseYear})`}</h2>\n        <p>{`User score: ${userScore}`}</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genres?.map(g => g.name).join(', ')}</p>\n      </div>\n    </article>\n  )\n}\n\nexport default MovieDatails","import React from 'react';\nimport {\n  Link,\n  Outlet,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport useFetchMoviesById from '../../hooks/useFetchMoviesById';\nimport Loader from '../../components/Loader/Loader';\nimport MovieDatails from '../../components/Movies/MovieDatails';\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { movie, loading } = useFetchMoviesById(movieId);\n\n  const backLink =\n    `${location.state?.from?.pathname}${location.state?.from?.search}` ??\n    '/movies';\n\n  const goBackHandler = e => {\n    navigate(backLink, { replace: true });\n  };\n\n  return (\n    <section>\n      <button type=\"button\" onClick={goBackHandler}>\n        &larr; Go back\n      </button>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <MovieDatails movie={movie}/>\n          <div>\n            <p>Aditional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\" state={location.state}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" state={location.state}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </>\n      )}\n    </section>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["Img","styled","props","maxWidth","src","alt","check","useState","imgSrc","setImgSrc","onError","movieId","urlParameter","parameterPath","movie","setMovie","loading","isLoading","useEffect","getMovieById","axios","response","data","console","log","poster_path","release_date","title","vote_average","overview","genres","releaseYear","Date","getFullYear","userScore","toFixed","ImageWithCheck","map","g","name","join","useParams","location","useLocation","navigate","useNavigate","useFetchMoviesById","backLink","state","from","pathname","search","type","onClick","e","replace","Loader","to"],"sourceRoot":""}